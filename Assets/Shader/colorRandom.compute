// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct Cube {
    float3 position;
    float4 color;
};

RWStructuredBuffer<Cube> cubes;

int iteractions;

float Rand(float2 co)
{
    return (frac(sin(dot(co.xy, float2(12.9898, 78.233))) * 4378.5453)) * 1;
}

[numthreads(10, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
    Cube cube = cubes[id.x];

    for (int i = 0; i < iteractions; i++)
    {
        float _r = Rand(float2(cube.color.r, cube.color.g));
        float _g = Rand(float2(cube.color.g, cube.color.g));
        float _b = Rand(float2(cube.color.r, cube.color.b));
        cube.color = float4(_r, _g, _b, 1);
    }

    cubes[id.x] = cube;
}
